import numpy as np
playing_cards_spades = [
 """
  _____
 |A .  |
 | /.\ |
 |(_._)|
 |  |  |
 |____A|
 """,
 """
  _____
 |1 .  |
 | /.\ |
 |(_._)|
 |  |  |
 |____1|
 """,
 """
  _____
 |2 .  |
 | /.\ |
 |(_._)|
 |  |  |
 |____2|
 """,
 """
  _____
 |3 .  |
 | /.\ |
 |(_._)|
 |  |  |
 |____3| 
 """,
 """
  _____
 |4 .  |
 | /.\ |
 |(_._)|
 |  |  |
 |____4|
 """,
 """
  _____
 |5 .  |
 | /.\ |
 |(_._)|
 |  |  |
 |____5|
 """,
 """ 
  _____
 |6 .  |
 | /.\ |
 |(_._)|
 |  |  |
 |____6|
 """,
 """
  _____
 |7 .  |
 | /.\ |
 |(_._)|
 |  |  |
 |____7|
 """,
 """
  _____
 |8 .  |
 | /.\ |
 |(_._)|
 |  |  |
 |____8|
 """,
 """
  _____
 |9 .  |
 | /.\ |
 |(_._)|
 |  |  |
 |____9|
 """,
 """
  _____
 |10.  |
 | /.\ |
 |(_._)|
 |  |  |
 |___10|
 """,
 """
  _____
 |J .  |
 | /.\ |
 |(_._)|
 |  |  |
 |____J|
 """,
 """
  _____
 |Q .  |
 | /.\ |
 |(_._)|
 |  |  |
 |____Q|
 """,
 """
  _____
 |K .  |
 | /.\ |
 |(_._)|
 |  |  |
 |____K|
 """
]

playing_cards_diamonds = [
"""
  _____
 |A ^  |
 | / \ |
 | \ / |
 |  .  |
 |____A|
 """,
 """
  _____
 |1 ^  |
 | / \ |
 | \ / |
 |  .  |
 |____1|
 """,
 """
  _____
 |2 ^  |
 | / \ |
 | \ / |
 |  .  |
 |____2|
 """,
 """
  _____
 |3 ^  |
 | / \ |
 | \ / |
 |  .  |
 |____3|
 """,
 """
  _____
 |4 ^  |
 | / \ |
 | \ / |
 |  .  |
 |____4|
 """,
 """
  _____
 |5 ^  |
 | / \ |
 | \ / |
 |  .  |
 |____5|
 """,
 """
  _____
 |6 ^  |
 | / \ |
 | \ / |
 |  .  |
 |____6|
 """,
 """
  _____
 |7 ^  |
 | / \ |
 | \ / |
 |  .  |
 |____7|
 """,
 """
  _____
 |8 ^  |
 | / \ |
 | \ / |
 |  .  |
 |____8|
 """,
 """
  _____
 |9 ^  |
 | / \ |
 | \ / |
 |  .  |
 |____9|
 """,
 """
  _____
 |10^  |
 | / \ |
 | \ / |
 |  .  |
 |___10|
 """,
 """
  _____
 |J ^  |
 | / \ |
 | \ / |
 |  .  |
 |____J|
 """,
 """
  _____
 |Q ^  |
 | / \ |
 | \ / |
 |  .  |
 |____Q|
 """,
 """
  _____
 |K ^  |
 | / \ |
 | \ / |
 |  .  |
 |____K|
 """
]

playing_cards_clubs = [
"""
  _____
 |A _  |
 | ( ) |
 |(_'_)|
 |  |  |
 |____A|
""",
"""
  _____
 |1 _  |
 | ( ) |
 |(_'_)|
 |  |  |
 |____1|
""",
"""
  _____
 |2 _  |
 | ( ) |
 |(_'_)|
 |  |  |
 |____2|
""",
"""
  _____
 |3 _  |
 | ( ) |
 |(_'_)|
 |  |  |
 |____3|
""",
"""
  _____
 |4 _  |
 | ( ) |
 |(_'_)|
 |  |  |
 |____4|
""",
"""
  _____
 |5 _  |
 | ( ) |
 |(_'_)|
 |  |  |
 |____5|
""",
"""
  _____
 |6 _  |
 | ( ) |
 |(_'_)|
 |  |  |
 |____6|
""",
"""
  _____
 |7 _  |
 | ( ) |
 |(_'_)|
 |  |  |
 |____7|
""",
"""
  _____
 |8 _  |
 | ( ) |
 |(_'_)|
 |  |  |
 |____8|
""",
"""
  _____
 |9 _  |
 | ( ) |
 |(_'_)|
 |  |  |
 |____9|
""",
"""
  _____
 |10_  |
 | ( ) |
 |(_'_)|
 |  |  |
 |___10|
""",
"""
  _____
 |J _  |
 | ( ) |
 |(_'_)|
 |  |  |
 |____J|
""",
"""
  _____
 |Q _  |
 | ( ) |
 |(_'_)|
 |  |  |
 |____Q|
""",
"""
  _____
 |K _  |
 | ( ) |
 |(_'_)|
 |  |  |
 |____K|
"""
]
playing_cards_hearts = [
    """
  _____
 |A_ _ |
 |( v )|
 | \ / |
 |  v  |
 |____A|
""",
"""
  _____
 |1_ _ |
 |( v )|
 | \ / |
 |  v  |
 |____1|
""",
"""
  _____
 |2_ _ |
 |( v )|
 | \ / |
 |  v  |
 |____2|
""",
"""
  _____
 |3_ _ |
 |( v )|
 | \ / |
 |  v  |
 |____3|
""",
"""
  _____
 |4_ _ |
 |( v )|
 | \ / |
 |  v  |
 |____4|
""",
"""
  _____
 |5_ _ |
 |( v )|
 | \ / |
 |  v  |
 |____5|
""",
"""
  _____
 |6_ _ |
 |( v )|
 | \ / |
 |  v  |
 |____6|
""",
"""
  _____
 |7_ _ |
 |( v )|
 | \ / |
 |  v  |
 |____7|
""",
"""
  _____
 |8_ _ |
 |( v )|
 | \ / |
 |  v  |
 |____8|
""",
"""
  _____
 |9_ _ |
 |( v )|
 | \ / |
 |  v  |
 |____9|
""",
"""
  _____
 |10 _ |
 |( v )|
 | \ / |
 |  v  |
 |___10|
""",
"""
  _____
 |J_ _ |
 |( v )|
 | \ / |
 |  v  |
 |____J|
""",
"""
  _____
 |Q_ _ |
 |( v )|
 | \ / |
 |  v  |
 |____Q|
""",
"""
  _____
 |K_ _ |
 |( v )|
 | \ / |
 |  v  |
 |____K|
"""
]
# 0 is ace, 11 is jack, 12 is queen, 13 is king
# the order inside the list goes spades, diamonds, clubs, hearts
# the deck has an extra copy of all spades, so when generating cards, exclude suit[0]; only include suits 1-4
def create_deck():
    deck = {}
    playing_cards = [playing_cards_spades, playing_cards_diamonds, playing_cards_clubs, playing_cards_hearts]
    for value in range(14):
        for suit in playing_cards:
            if value not in deck:
                deck[value] = [suit[value]]
            deck[value].append(suit[value])
    return deck

class Grid():

    def __init__(self, x=5, y=5):
        self.x = x
        self.y = y
        self.area = np.zeros(shape=(self.x, self.y))

class Dealer():
    pass
        

class Player():
    pass

play_area = Grid()

deck = create_deck()
print(deck[13][1])

